name: Blinky

on:
#   push:
#     branches: [ main ]
#   pull_request:
#   schedule:
#     - cron: "0 0 * * *"

  workflow_dispatch:

jobs:
  build_for_hw_test:
    runs-on: ubuntu-latest

    container:
      image: zephyrprojectrtos/ci:v0.26.4

    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.16.1

    steps:
      - uses: actions/checkout@v3
        with:
          path: app

      - name: Init and update west
        run: |
          mkdir -p .west
          cat <<EOF > .west/config
          [manifest]
          path = app
          file = west.yml
          EOF

          west update -o=--depth=1 -n
          git config --global user.email user@git-scm.com
          git config --global user.name "Git User"
          west patch

      - name: Build blinky
        run: |
          ls -lah
          cd deps/zephyr/samples/basic/blinky
          west build -b nrf52840dk_nrf52840 . -p

      - name: Create build tarball
        run: |
          cd deps/zephyr/samples/basic/blinky
          tar czf build.tar.gz build/zephyr/zephyr.hex

      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: build.tar.gz
          path: deps/zephyr/samples/basic/blinky/build.tar.gz

# Run on device
  hw_flash_and_test:
    needs: build_for_hw_test
    runs-on: [self-hosted, has-nrf52840dk]

    defaults:
      run:
        shell: bash
        working-directory: blinky-test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          path: blinky-test

      - name: Download build tarball
        uses: actions/download-artifact@v3
        with:
          name: build.tar.gz
          path: blinky-test/samples/blinky

      - name: Untar
        run: |
          cd samples/blinky
          tar xvf build.tar.gz

      - name: Flash and Verify Test Results
        env:
          CI_NRF52840DK_SNR: ${{ secrets.CI_NRF52840DK_SNR }}
        run: |
          cd samples/blinky

          # Check serial number of board from GitHub Repo Secret
          echo $CI_NRF52840DK_SNR

          nrfjprog --recover -f NRF52 --snr $CI_NRF52840DK_SNR
          nrfjprog --eraseall -f NRF52 --snr $CI_NRF52840DK_SNR
          nrfjprog --program build/zephyr/zephyr.hex --verify -f NRF52 --snr $CI_NRF52840DK_SNR
          nrfjprog --pinresetenable -f NRF52 --snr $CI_NRF52840DK_SNR
          nrfjprog --pinreset -f NRF52 --snr $CI_NRF52840DK_SNR
          sleep 3
